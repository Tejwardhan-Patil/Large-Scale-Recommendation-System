# Central Configuration for Large-Scale Recommendation System

# Global settings for all components
global:
  environment: "production"
  logging:
    level: "INFO"
    format: "json"
    output: "logs/system.log"
  database:
    host: "db.website.com"
    port: 5432
    user: "db_user"
    password: "secure_password"
    name: "recommendation_db"
  data_lake:
    s3_bucket: "s3://data-lake-bucket"
    region: "us-west-2"

# Data Ingestion and Preprocessing
data_ingestion:
  api_extractor:
    base_url: "https://api.website.com"
    timeout: 30
    retries: 3
  db_extractor:
    fetch_size: 10000
  transformers:
    clean_nulls: true
    normalization:
      method: "z-score"
  loaders:
    target_storage: "s3"
    batch_size: 5000
    compression: "gzip"

# Model Training Configuration
model_training:
  algorithms:
    collaborative_filtering:
      neighbors: 50
      similarity: "cosine"
    matrix_factorization:
      latent_factors: 100
      regularization: 0.01
    deep_learning:
      epochs: 10
      batch_size: 128
      learning_rate: 0.001
  pipelines:
    data_split:
      train_ratio: 0.8
      validation_ratio: 0.1
      test_ratio: 0.1
  evaluation:
    metrics: ["precision", "recall", "f1-score", "rmse"]

# Serving and Deployment Configuration
model_serving:
  inference_api:
    host: "0.0.0.0"
    port: 8080
    timeout: 5
  scaling:
    min_instances: 2
    max_instances: 10
    scale_up_threshold: 70  # Scale up if CPU utilization exceeds 70%
    scale_down_threshold: 30  # Scale down if CPU utilization falls below 30%

# Recommendation Logic Configuration
recommendation_engine:
  personalization:
    enabled: true
    update_interval: "daily"
  feedback_loop:
    active: true
    feedback_window: 7  # Incorporate feedback from the last 7 days
  algorithms:
    ensemble:
      strategies:
        - "weighted_average"
        - "stacking"
      weights:
        collaborative_filtering: 0.4
        matrix_factorization: 0.3
        deep_learning: 0.3

# Event-Driven Architecture Configuration
event_bus:
  producers:
    interaction_producer:
      max_events_per_minute: 1000
  consumers:
    feedback_consumer:
      batch_size: 500
      parallelism: 4

# Monitoring and Alerts Configuration
monitoring:
  performance_monitor:
    enabled: true
    metrics:
      - "latency"
      - "throughput"
      - "error_rate"
    alert_thresholds:
      latency: 200  # Alert if latency exceeds 200ms
      error_rate: 5  # Alert if error rate exceeds 5%
  autoscaler:
    cpu_threshold: 75  # Scale up if CPU utilization exceeds 75%

# Security and Access Control
security:
  authentication:
    enabled: true
    jwt_secret: "super_secure_key"
    token_expiry: 3600  # Token expires in 1 hour
  authorization:
    roles:
      admin: ["read", "write", "delete"]
      user: ["read"]
  encryption:
    at_rest: "AES256"
    in_transit: "TLSv1.2"